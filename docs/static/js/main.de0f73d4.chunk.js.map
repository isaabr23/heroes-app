{"version":3,"sources":["auth/AuthContext.js","routers/PrivateRoute.js","routers/PublicRoute.js","types/types.js","components/login/LoginScreen.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroList.js","selectors/getHeroesByPublisher.js","components/dc/DcScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/Marvel/MarvelScreen.js","components/search/SearchScreen.js","Hooks/useForm.js","selectors/getHeroesByName.js","components/ui/Navbar.js","routers/DashboardRoutes.js","routers/AppRouter.js","auth/authReducer.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","types","LoginScreen","history","dispatch","useContext","className","onClick","paginaAnte","getItem","type","payload","Administrador","replace","heroes","HeroCard","id","superhero","alter_ego","first_appearance","characters","src","alt","HeroList","publisher","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","lenght","push","goBack","MarvelScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","name","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroesByName","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","length","Navbar","user","useHistory","activeClassName","exact","DashboardRoutes","path","AppRouter","logged","authReducer","state","action","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.de0f73d4.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nexport const AuthContext = createContext();","// Video 191\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n// Se recibiran varios elementos en las props \r\n// **isAuthenticated (para saber si esta autenticado), component: Component (para saber q persona se renderizo), ...rest (todos los demas argumentos como el exact, path, etc...)** \r\nexport const PrivateRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n }) => {\r\n\r\n    // Nos ayuda a guardar informacion del pathname (/Marvel, /dc, etc...) \r\n    //para que cuando cerremos la app y nos loguemos nos abra la app en la pagina donde nos quedamos\r\n    localStorage.setItem('UltimaPagina', rest.location.pathname);\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            ) }\r\n        />    \r\n    )\r\n}\r\n\r\n// Ponemos proptypes requeridos para que funcione el PrivateRoute\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","// Video 191\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\n// Se recibiran varios elementos en las props **isAuthenticated (para saber si esta autenticado), component: Component (para saber q persona se renderizo), ...rest (todos los demas argumentos como el exact, path, etc...)** \r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n }) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ ( props ) => (\r\n                ( !isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/\" /> )\r\n            ) }\r\n        />    \r\n    )\r\n}\r\n\r\n// Ponemos proptypes requeridos para que funcione el PrivateRoute\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","// Este objeto va a tener todos los types de la aplicacion\r\n\r\nexport const types = {\r\n\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n}","import React, { useContext } from 'react'\r\nimport { AuthContext } from '../../auth/AuthContext'\r\nimport { types } from '../../types/types';\r\n\r\n// Usamos las props en el argumento del componente Inspeccionar/Components/LoginScreen/history/push\r\nexport const LoginScreen = ({ history }) => {\r\n\r\n    // Extraemos el dispatch\r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    // Al tocar el boton nos redirecciona a '/'\r\n    const handleLogin = () => {\r\n\r\n        // obtenemos lo que esta guardado en el localStorage (UltimaPagina) de PrivateRoure.js \r\n        // pero si es la primera vez que navega el usuario o borraron el localStorage lo redireccionara a '/'\r\n        const paginaAnte = localStorage.getItem('UltimaPagina') || '/';\r\n        \r\n        dispatch({\r\n            type: types.login,\r\n            payload: {\r\n                Administrador: 'Isaac'\r\n            }\r\n        })\r\n\r\n        // Reemplaza en la history que no paso por el login cuando y cuando ya le dimos click nos regresa a la ultima pagina que habiamos visitado\r\n        history.replace( paginaAnte );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h1>Login</h1>\r\n            <hr />\r\n\r\n            <button\r\n                className=\"btn btn-primary\"\r\n                onClick={ handleLogin }\r\n            >\r\n                Login\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","// Publisher lo usamos en HeroList * getHeroesByPublisher * \r\n// Este archivo lo usariamos como si fuera la BD\r\n\r\nexport const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const HeroCard = ({\r\n        id,\r\n        superhero,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n}) => {\r\n    return (\r\n        \r\n        <div className=\"col\">\r\n            <div className=\"card h-100\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={ `./assets/heroes/${ id }.jpg` } className=\"card-img\" alt=\"superhero\"/>\r\n                </div>\r\n\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{ superhero }</h5>\r\n                        <p className=\"card-text\"> { alter_ego } </p>\r\n\r\n                        {/* Solo mostrara los characters si no son iguales al alter_ego */}\r\n\r\n                        {\r\n                            ( alter_ego !== characters )\r\n                                && <p className=\"card-text\"> { characters } </p>\r\n                        }\r\n\r\n                        <p className=\"card-text\">\r\n                            <small className=\"text-muted\"> { first_appearance } </small>\r\n                        </p>\r\n\r\n                        <Link to={ `./hero/${ id }` }>\r\n                            Mas...\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher'\r\nimport { HeroCard } from './HeroCard';\r\n\r\n// Recibe la destructuracion del arreglo heroes para extraer publisher (BD)\r\nexport const HeroList = ({ publisher }) => {\r\n\r\n    // recibe el \"publisher\" de la BD\r\n    // Solo se renderiza cuando [publisher] es cambiado\r\n    const heroes = useMemo(() => getHeroesByPublisher( publisher ), [ publisher ]);\r\n    \r\n\r\n    // Retorna una lista ordenada por medio de un map que barre el arreglo de heroes cada uno tiene la llave de su ID\r\n    // y despues muestra el nombre del heroe (hero.superhero) y muestra en la pantalla todo el barrido \r\n    return (\r\n        <div className=\"row row-cols-1 row-cols-md-3 g-4 animate__animated animate__fadeIn\">\r\n           {\r\n               heroes.map( hero => (\r\n                    <HeroCard key={ hero.id }\r\n                       { ...hero }\r\n                    />\r\n               ))\r\n           } \r\n        </div>\r\n    )\r\n}\r\n\r\n","import { heroes } from \"../data/heroes\";\r\n\r\nimport React from 'react';\r\n\r\n// Recibe el publisher de la BD\r\nexport const getHeroesByPublisher = ( publisher ) => {\r\n\r\n    // Si el usuario escribe un publisher que no es aceptado se lanza un error\r\n    const validPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    // Si const validPublishers no existe (!validPublishers.includes) 'DC Comics', 'Marvel Comics' enviara un nuevo error\r\n    if (!validPublishers.includes( publisher )) {\r\n        throw new Error(`Publisher \"${ publisher }\" no es correcto`)\r\n    }\r\n\r\n    // Retorna el filtro de los heroes por publisher \"DC Comics\" o \"Marvel\"\r\n    return heroes.filter( hero => hero.publisher === publisher );\r\n    \r\n}\r\n","import React from 'react';\r\nimport { HeroList } from '../heroes/HeroList';\r\n\r\nexport const DcScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n        \r\n            <HeroList publisher=\"DC Comics\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Redirect, useParams } from 'react-router'\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\n// Recibimos el arbol de history para poder acceder a las opciones del arbol como por ejemplo history.goBack();\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    // Usamos el Hook useParams para obtener los parametros del url\r\n    // Destructuramos el params con \"heroeId\"\r\n    const { heroeId } = useParams();\r\n    // console.log(heroeId);\r\n\r\n    const hero =useMemo(() => getHeroById( heroeId ), [ heroeId ]);\r\n\r\n    // Validamos que si el usuario escribe algo mas en el url que no exista nos redirecciona a \"/\"\r\n    if ( !hero ) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    // Por si copiamos el url en otra pagina y al regresar nos mande al \"/\"\r\n    const handleReturn = () => {\r\n        \r\n        if ( history.lenght <= 2) {\r\n            // Si \"history.lenght <= 2\" nos redireccionara a \"/\" (historial de navegacion 1 o 2 paginas atras)\r\n            history.push('/');\r\n        } else {\r\n            // Nos permite regresar a la pagina anterior por medio del history de la pagina web y la opcion de goBack\r\n            history.goBack(); \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img \r\n                    src={ `../assets/heroes/${ heroeId }.jpg` }\r\n                    alt={ hero.superhero }\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                />\r\n\r\n                <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                    <h3> { hero.superhero } </h3>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\"> <b> Alter ego: </b> { hero.alter_ego } </li>\r\n                        <li className=\"list-group-item\"> <b> Publisher: </b> { hero.publisher } </li>\r\n                        <li className=\"list-group-item\"> <b> First appearance: </b> { hero.first_appearance } </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={ handleReturn }>\r\n                    Regresar\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n// Recibe el \"id\" y retorna todos los id de los heroes (BD) ** los busca por medio del find\r\nexport const getHeroById = ( id ) => {\r\n\r\n    return heroes.find( hero => hero.id === id );\r\n    \r\n}\r\n","import React from 'react'\r\nimport { HeroList } from '../heroes/HeroList'\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n        \r\n            <HeroList publisher=\"Marvel Comics\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string'; // Lo exportamos de la pagina \"npm install query-string\" para facilitar la recoleccion de los datos /search?q=batman como string\r\nimport { useForm } from '../../Hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { useLocation } from 'react-router'; // Para facilitar la localizacion de \"q\" en el url y usar el dato en nuestro programa\r\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    // descargamos la libreria \"npm install query-string\" para utilizar el \"useLocation\"\r\n    const location = useLocation();\r\n    // console.log(location.search);\r\n\r\n    // si \"q\" no existe (nada en la caja de buscar) nos dara un string vacio y si existe tendremos en consola lo que esta en el url ** si el usuario actualiza no se borrara la informacion del url\r\n    const { q = ''} = queryString.parse( location.search );\r\n    // console.log(q);\r\n\r\n    \r\n    // El \"q\" es lo que le pasaremos como valor inicial al searchText \r\n    const [ formValues, handleInputChange ] = useForm({ \r\n        searchText: q\r\n    });\r\n    \r\n    // Asi extraemos el \"searchText\" del formValues de arriba\r\n    const { searchText } = formValues;\r\n\r\n    const heroesFiltered = useMemo(() => getHeroesByName( searchText ), [q])\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        \r\n        // Nos coloca ?q=${ searchText } en el URL ejemplo: /search?q=batman\r\n        history.push(`?q=${ searchText }`)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h1>Search Screen </h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-5\">\r\n                    <h4> Search Form </h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={ handleSearch }>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your Hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            autoComplete=\"off\"\r\n                            value={ searchText }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search...\r\n                        </button>\r\n                    </form>\r\n                \r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n\r\n                    <h4> Results </h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        ( q === '' ) &&  \r\n                        <div className=\"alert alert-info\"> \r\n                                Search a hero\r\n                        </div>\r\n                    }\r\n                    \r\n                    {\r\n                        ( q !== '' && heroesFiltered.length === 0 ) \r\n                        &&  \r\n                        <div className=\"alert alert-danger\"> \r\n                            There is no a hero with { q }\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map( hero => (\r\n                            <HeroCard \r\n                                key={ hero.id }   \r\n                                { ...hero }\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByName = ( name = '') => {\r\n\r\n    // Si no recibimos ninguna nformacion regresara un [] vacio\r\n    if ( name === '') {\r\n        return [];\r\n    }\r\n\r\n    // name = name.toLocaleLowerCase(); para que no discrimine si el usuario escribe en mayusculas o minusculas\r\n    name = name.toLocaleLowerCase();\r\n\r\n    // Regresara el filtro de hero.superhero incluyendo el name que se recibe por argumento\r\n    return heroes.filter( hero => hero.superhero.toLocaleLowerCase().includes( name ) );\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\n\r\nexport const Navbar = () => {\r\n\r\n    // Extraemos el user del AuthContext del archivo AuthContext.js\r\n    const { user: { Administrador }, dispatch } = useContext( AuthContext );\r\n    // console.log(Administrador);\r\n\r\n    // UseHistory nos regresa el history del arbol accediendo mas facil en este caso a **action, block, createHref, go, goBack, goForward, length, listen, location, push, replace\r\n    // En este caso queremos acceder a \"replace\" para poder usar el handleLogout\r\n\r\n    const history = useHistory();\r\n\r\n    // Al oprimir el boton llamamos al dispatch que borra el types.login y el user\r\n    const handleLogout = () => {\r\n\r\n        history.replace('/login');\r\n\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            \r\n            <Link \r\n                className=\"navbar-brand\" \r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\" \r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-700 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto\">\r\n\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {/* Extraemos el nombre del usuario */}\r\n                        { Administrador }\r\n                    </span>\r\n\r\n                    <button\r\n                        className=\"nav-item nav-link btn\"\r\n                        onClick={ handleLogout }\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { DcScreen } from '../components/dc/DcScreen';\r\n\r\nimport { HeroScreen } from '../components/heroes/HeroScreen';\r\nimport { MarvelScreen } from '../components/Marvel/MarvelScreen';\r\nimport { SearchScreen } from '../components/search/SearchScreen';\r\nimport { Navbar } from '../components/ui/Navbar';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <>\r\n            {/* Mostramos la barra solo en el \"DashboardRoutes\" en \"LoginScreen\" no*/}\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-3\">\r\n                <Switch>\r\n                    {/* Muestra \"MarvelScreen\" cuando el url es exactamente \"/marvel\" */}\r\n                    <Route exact path=\"/marvel\" component={ MarvelScreen } />\r\n                    {/* Muestra \"HeroScreen\" cuando el url es exactamente \"/hero/:heroeId\" es el que nos muesra el \"Mas...\" de cada heroe */}\r\n                    <Route exact path=\"/hero/:heroeId\" component={ HeroScreen } />\r\n                    {/* Muestra \"DcScreen\" cuando el url es exactamente \"/dc\" */}\r\n                    <Route exact path=\"/dc\" component={ DcScreen } />\r\n\r\n                    <Route exact path=\"/search\" component={ SearchScreen } />\r\n\r\n                    {/* Redirecciona a \"/marvel\" cuando el url es diferente a cualquier Route del Switch */}\r\n                    <Redirect to=\"/marvel\" />\r\n                </Switch>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch\r\n  } from \"react-router-dom\";\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nimport { LoginScreen } from '../components/login/LoginScreen';\r\nimport { DashboardRoutes } from './DashboardRoutes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    // Extraemos el user del useContext (video 191)\r\n    const { user } = useContext( AuthContext );\r\n    // console.log(user);\r\n\r\n    return (\r\n        // Creamos el Router\r\n        <Router>\r\n            <div>\r\n                {/* Creamos los diferentes caminos */}\r\n                <Switch>\r\n                    {/* Creamos las diferentes rutas */}\r\n                    {/* nos redirecciona al componente \"LoginScreen\" cuando el url es exactamente \"/login\" y ya este logueado */}\r\n                    <PublicRoute \r\n                        exact\r\n                        path=\"/login\"\r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ user.logged }\r\n                    />               \r\n\r\n                    {/* Tiene proteccion de rutas, si el usuario no se ha logueado no carga ninguna ruta (si copiamos y pegamos por el url)\r\n                        y si ya estamos autenticados  nos redirecciona al componente \"DashboardRoutes\" cuando el url empieza con \"/\" (nos deja ingresar a la app) \r\n                        y si ya estamos loguados y nos salimos del buscador y volvemos a abrir otra pagina y pegamos el url la app recordara que ya estamos logueados\r\n                    */}\r\n                    <PrivateRoute \r\n                        path=\"/\" \r\n                        component={ DashboardRoutes }\r\n                        isAuthenticated={ user.logged } />  \r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n// const state = {\r\n//     name: 'Isaac',\r\n//     logged: true\r\n// }\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n\r\n    switch ( action.type ) {\r\n        \r\n        case types.login:\r\n            \r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n\r\n        return {\r\n            logged: false\r\n        }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useEffect, useReducer } from 'react';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { AuthContext } from './auth/AuthContext';\r\nimport { authReducer } from './auth/authReducer';\r\n\r\n    // init solo revisara el LocalStorage para ver si tenemos el objeto (user) para evaluar ese LocalStorage\r\n    // y si existe lo va a retornar y si no ( || ) retorna un objeto en falso ** este es el estado inicial\r\n    const init = () => {\r\n        return JSON.parse( localStorage.getItem( 'user' ) ) || { logged: false }; \r\n    }\r\n\r\nexport const HeroesApp = () => {\r\n                                        // El init pasa su estado al objeto vacio {} (initialState)\r\n    const [ user, dispatch] = useReducer( authReducer , {}, init)\r\n\r\n    // Con el useEffect hacemos que cuando nos autentificamos y se refrezca la pagina no se pierda el usuario (name)\r\n    // 'user' es como mi ejemplo de 'pandora' asi se llama la 'caja' del localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify( user ));\r\n    }, [user])\r\n\r\n        return (\r\n    // user y dispatch es lo que voy a distribuir en AuthContext, significa que yo puedo usar \"user\" y \"dispatch\" en toda la aplicacion \r\n            <AuthContext.Provider value={{ user, dispatch }}>\r\n\r\n                <AppRouter />\r\n                \r\n            </AuthContext.Provider>\r\n        )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n    <HeroesApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}